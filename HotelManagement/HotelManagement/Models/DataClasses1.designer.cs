#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotelManagement.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="hotel2")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertusuario(usuario instance);
    partial void Updateusuario(usuario instance);
    partial void Deleteusuario(usuario instance);
    partial void Insertagencia(agencia instance);
    partial void Updateagencia(agencia instance);
    partial void Deleteagencia(agencia instance);
    partial void InsertApplication(Application instance);
    partial void UpdateApplication(Application instance);
    partial void DeleteApplication(Application instance);
    partial void Insertcategoria_ser(categoria_ser instance);
    partial void Updatecategoria_ser(categoria_ser instance);
    partial void Deletecategoria_ser(categoria_ser instance);
    partial void Insertempresa(empresa instance);
    partial void Updateempresa(empresa instance);
    partial void Deleteempresa(empresa instance);
    partial void Insertfactura(factura instance);
    partial void Updatefactura(factura instance);
    partial void Deletefactura(factura instance);
    partial void Inserthabitacion(habitacion instance);
    partial void Updatehabitacion(habitacion instance);
    partial void Deletehabitacion(habitacion instance);
    partial void Insertmantencione(mantencione instance);
    partial void Updatemantencione(mantencione instance);
    partial void Deletemantencione(mantencione instance);
    partial void InsertMembership(Membership instance);
    partial void UpdateMembership(Membership instance);
    partial void DeleteMembership(Membership instance);
    partial void Insertpersona(persona instance);
    partial void Updatepersona(persona instance);
    partial void Deletepersona(persona instance);
    partial void InsertProfile(Profile instance);
    partial void UpdateProfile(Profile instance);
    partial void DeleteProfile(Profile instance);
    partial void Insertreserva(reserva instance);
    partial void Updatereserva(reserva instance);
    partial void Deletereserva(reserva instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void Insertservicio(servicio instance);
    partial void Updateservicio(servicio instance);
    partial void Deleteservicio(servicio instance);
    partial void Inserttip_hab(tip_hab instance);
    partial void Updatetip_hab(tip_hab instance);
    partial void Deletetip_hab(tip_hab instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUsersInRole(UsersInRole instance);
    partial void UpdateUsersInRole(UsersInRole instance);
    partial void DeleteUsersInRole(UsersInRole instance);
    partial void Insertarchivo(archivo instance);
    partial void Updatearchivo(archivo instance);
    partial void Deletearchivo(archivo instance);
    partial void Insertcliente(cliente instance);
    partial void Updatecliente(cliente instance);
    partial void Deletecliente(cliente instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<usuario> usuarios
		{
			get
			{
				return this.GetTable<usuario>();
			}
		}
		
		public System.Data.Linq.Table<agencia> agencias
		{
			get
			{
				return this.GetTable<agencia>();
			}
		}
		
		public System.Data.Linq.Table<Application> Applications
		{
			get
			{
				return this.GetTable<Application>();
			}
		}
		
		public System.Data.Linq.Table<categoria_ser> categoria_sers
		{
			get
			{
				return this.GetTable<categoria_ser>();
			}
		}
		
		public System.Data.Linq.Table<empresa> empresas
		{
			get
			{
				return this.GetTable<empresa>();
			}
		}
		
		public System.Data.Linq.Table<factura> facturas
		{
			get
			{
				return this.GetTable<factura>();
			}
		}
		
		public System.Data.Linq.Table<habitacion> habitacions
		{
			get
			{
				return this.GetTable<habitacion>();
			}
		}
		
		public System.Data.Linq.Table<mantencione> mantenciones
		{
			get
			{
				return this.GetTable<mantencione>();
			}
		}
		
		public System.Data.Linq.Table<Membership> Memberships
		{
			get
			{
				return this.GetTable<Membership>();
			}
		}
		
		public System.Data.Linq.Table<pasajero> pasajeros
		{
			get
			{
				return this.GetTable<pasajero>();
			}
		}
		
		public System.Data.Linq.Table<persona> personas
		{
			get
			{
				return this.GetTable<persona>();
			}
		}
		
		public System.Data.Linq.Table<Profile> Profiles
		{
			get
			{
				return this.GetTable<Profile>();
			}
		}
		
		public System.Data.Linq.Table<reserva> reservas
		{
			get
			{
				return this.GetTable<reserva>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<servicio> servicios
		{
			get
			{
				return this.GetTable<servicio>();
			}
		}
		
		public System.Data.Linq.Table<serviciousado> serviciousados
		{
			get
			{
				return this.GetTable<serviciousado>();
			}
		}
		
		public System.Data.Linq.Table<tip_hab> tip_habs
		{
			get
			{
				return this.GetTable<tip_hab>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UsersInRole> UsersInRoles
		{
			get
			{
				return this.GetTable<UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<archivo> archivos
		{
			get
			{
				return this.GetTable<archivo>();
			}
		}
		
		public System.Data.Linq.Table<cliente> clientes
		{
			get
			{
				return this.GetTable<cliente>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ocupado", IsComposable=true)]
		public System.Nullable<bool> ocupado([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idHabi, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> fechaIni, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> fechaFin)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idHabi, fechaIni, fechaFin).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuario")]
	public partial class usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _ciudad;
		
		private string _estado;
		
		private string _pais;
		
		private string _nit;
		
		private string _telefono;
		
		private string _direccion;
		
		private string _comentarios;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnciudadChanging(string value);
    partial void OnciudadChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    partial void OnpaisChanging(string value);
    partial void OnpaisChanged();
    partial void OnnitChanging(string value);
    partial void OnnitChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OncomentariosChanging(string value);
    partial void OncomentariosChanged();
    #endregion
		
		public usuario()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ciudad", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ciudad
		{
			get
			{
				return this._ciudad;
			}
			set
			{
				if ((this._ciudad != value))
				{
					this.OnciudadChanging(value);
					this.SendPropertyChanging();
					this._ciudad = value;
					this.SendPropertyChanged("ciudad");
					this.OnciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pais", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string pais
		{
			get
			{
				return this._pais;
			}
			set
			{
				if ((this._pais != value))
				{
					this.OnpaisChanging(value);
					this.SendPropertyChanging();
					this._pais = value;
					this.SendPropertyChanged("pais");
					this.OnpaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nit", DbType="VarChar(10)")]
		public string nit
		{
			get
			{
				return this._nit;
			}
			set
			{
				if ((this._nit != value))
				{
					this.OnnitChanging(value);
					this.SendPropertyChanging();
					this._nit = value;
					this.SendPropertyChanged("nit");
					this.OnnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comentarios", DbType="VarChar(500)")]
		public string comentarios
		{
			get
			{
				return this._comentarios;
			}
			set
			{
				if ((this._comentarios != value))
				{
					this.OncomentariosChanging(value);
					this.SendPropertyChanging();
					this._comentarios = value;
					this.SendPropertyChanged("comentarios");
					this.OncomentariosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_usuario", Storage="_User", ThisKey="id", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.usuario = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.usuario = this;
						this._id = value.UserId;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.agencia")]
	public partial class agencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _contacto;
		
		private EntityRef<cliente> _cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncontactoChanging(string value);
    partial void OncontactoChanged();
    #endregion
		
		public agencia()
		{
			this._cliente = default(EntityRef<cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contacto", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string contacto
		{
			get
			{
				return this._contacto;
			}
			set
			{
				if ((this._contacto != value))
				{
					this.OncontactoChanging(value);
					this.SendPropertyChanging();
					this._contacto = value;
					this.SendPropertyChanged("contacto");
					this.OncontactoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_agencia", Storage="_cliente", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public cliente cliente
		{
			get
			{
				return this._cliente.Entity;
			}
			set
			{
				cliente previousValue = this._cliente.Entity;
				if (((previousValue != value) 
							|| (this._cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente.Entity = null;
						previousValue.agencia = null;
					}
					this._cliente.Entity = value;
					if ((value != null))
					{
						value.agencia = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Applications")]
	public partial class Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<Membership> _Memberships;
		
		private EntitySet<Role> _Roles;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Application()
		{
			this._Memberships = new EntitySet<Membership>(new Action<Membership>(this.attach_Memberships), new Action<Membership>(this.detach_Memberships));
			this._Roles = new EntitySet<Role>(new Action<Role>(this.attach_Roles), new Action<Role>(this.detach_Roles));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(235) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Membership", Storage="_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<Membership> Memberships
		{
			get
			{
				return this._Memberships;
			}
			set
			{
				this._Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Role", Storage="_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<Role> Roles
		{
			get
			{
				return this._Roles;
			}
			set
			{
				this._Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_User", Storage="_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Memberships(Membership entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_Memberships(Membership entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_Roles(Role entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_Roles(Role entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.categoria_ser")]
	public partial class categoria_ser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _categoria;
		
		private EntitySet<servicio> _servicios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncategoriaChanging(string value);
    partial void OncategoriaChanged();
    #endregion
		
		public categoria_ser()
		{
			this._servicios = new EntitySet<servicio>(new Action<servicio>(this.attach_servicios), new Action<servicio>(this.detach_servicios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoria", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string categoria
		{
			get
			{
				return this._categoria;
			}
			set
			{
				if ((this._categoria != value))
				{
					this.OncategoriaChanging(value);
					this.SendPropertyChanging();
					this._categoria = value;
					this.SendPropertyChanged("categoria");
					this.OncategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="categoria_ser_servicio", Storage="_servicios", ThisKey="id", OtherKey="categoria")]
		public EntitySet<servicio> servicios
		{
			get
			{
				return this._servicios;
			}
			set
			{
				this._servicios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_servicios(servicio entity)
		{
			this.SendPropertyChanging();
			entity.categoria_ser = this;
		}
		
		private void detach_servicios(servicio entity)
		{
			this.SendPropertyChanging();
			entity.categoria_ser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.empresa")]
	public partial class empresa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _contacto;
		
		private string _metodopago;
		
		private EntityRef<cliente> _cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncontactoChanging(string value);
    partial void OncontactoChanged();
    partial void OnmetodopagoChanging(string value);
    partial void OnmetodopagoChanged();
    #endregion
		
		public empresa()
		{
			this._cliente = default(EntityRef<cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contacto", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string contacto
		{
			get
			{
				return this._contacto;
			}
			set
			{
				if ((this._contacto != value))
				{
					this.OncontactoChanging(value);
					this.SendPropertyChanging();
					this._contacto = value;
					this.SendPropertyChanged("contacto");
					this.OncontactoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metodopago", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string metodopago
		{
			get
			{
				return this._metodopago;
			}
			set
			{
				if ((this._metodopago != value))
				{
					this.OnmetodopagoChanging(value);
					this.SendPropertyChanging();
					this._metodopago = value;
					this.SendPropertyChanged("metodopago");
					this.OnmetodopagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_empresa", Storage="_cliente", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public cliente cliente
		{
			get
			{
				return this._cliente.Entity;
			}
			set
			{
				cliente previousValue = this._cliente.Entity;
				if (((previousValue != value) 
							|| (this._cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente.Entity = null;
						previousValue.empresa = null;
					}
					this._cliente.Entity = value;
					if ((value != null))
					{
						value.empresa = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.factura")]
	public partial class factura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _nro;
		
		private System.DateTime _fecha;
		
		private int _idreserva;
		
		private EntityRef<reserva> _reserva;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnroChanging(int value);
    partial void OnnroChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    partial void OnidreservaChanging(int value);
    partial void OnidreservaChanged();
    #endregion
		
		public factura()
		{
			this._reserva = default(EntityRef<reserva>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int nro
		{
			get
			{
				return this._nro;
			}
			set
			{
				if ((this._nro != value))
				{
					this.OnnroChanging(value);
					this.SendPropertyChanging();
					this._nro = value;
					this.SendPropertyChanged("nro");
					this.OnnroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="DateTime NOT NULL")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idreserva", DbType="Int NOT NULL")]
		public int idreserva
		{
			get
			{
				return this._idreserva;
			}
			set
			{
				if ((this._idreserva != value))
				{
					if (this._reserva.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidreservaChanging(value);
					this.SendPropertyChanging();
					this._idreserva = value;
					this.SendPropertyChanged("idreserva");
					this.OnidreservaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="reserva_factura", Storage="_reserva", ThisKey="idreserva", OtherKey="id", IsForeignKey=true)]
		public reserva reserva
		{
			get
			{
				return this._reserva.Entity;
			}
			set
			{
				reserva previousValue = this._reserva.Entity;
				if (((previousValue != value) 
							|| (this._reserva.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._reserva.Entity = null;
						previousValue.facturas.Remove(this);
					}
					this._reserva.Entity = value;
					if ((value != null))
					{
						value.facturas.Add(this);
						this._idreserva = value.id;
					}
					else
					{
						this._idreserva = default(int);
					}
					this.SendPropertyChanged("reserva");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.habitacion")]
	public partial class habitacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _numero;
		
		private int _tipo;
		
		private bool _disponibilidad;
		
		private double _precio;
		
		private EntitySet<mantencione> _mantenciones;
		
		private EntitySet<reserva> _reservas;
		
		private EntityRef<tip_hab> _tip_hab;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnumeroChanging(int value);
    partial void OnnumeroChanged();
    partial void OntipoChanging(int value);
    partial void OntipoChanged();
    partial void OndisponibilidadChanging(bool value);
    partial void OndisponibilidadChanged();
    partial void OnprecioChanging(double value);
    partial void OnprecioChanged();
    #endregion
		
		public habitacion()
		{
			this._mantenciones = new EntitySet<mantencione>(new Action<mantencione>(this.attach_mantenciones), new Action<mantencione>(this.detach_mantenciones));
			this._reservas = new EntitySet<reserva>(new Action<reserva>(this.attach_reservas), new Action<reserva>(this.detach_reservas));
			this._tip_hab = default(EntityRef<tip_hab>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int numero
		{
			get
			{
				return this._numero;
			}
			set
			{
				if ((this._numero != value))
				{
					this.OnnumeroChanging(value);
					this.SendPropertyChanging();
					this._numero = value;
					this.SendPropertyChanged("numero");
					this.OnnumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="Int NOT NULL")]
		public int tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					if (this._tip_hab.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disponibilidad", DbType="Bit NOT NULL")]
		public bool disponibilidad
		{
			get
			{
				return this._disponibilidad;
			}
			set
			{
				if ((this._disponibilidad != value))
				{
					this.OndisponibilidadChanging(value);
					this.SendPropertyChanging();
					this._disponibilidad = value;
					this.SendPropertyChanged("disponibilidad");
					this.OndisponibilidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precio", DbType="Float NOT NULL")]
		public double precio
		{
			get
			{
				return this._precio;
			}
			set
			{
				if ((this._precio != value))
				{
					this.OnprecioChanging(value);
					this.SendPropertyChanging();
					this._precio = value;
					this.SendPropertyChanged("precio");
					this.OnprecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="habitacion_mantencione", Storage="_mantenciones", ThisKey="numero", OtherKey="idhab")]
		public EntitySet<mantencione> mantenciones
		{
			get
			{
				return this._mantenciones;
			}
			set
			{
				this._mantenciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="habitacion_reserva", Storage="_reservas", ThisKey="numero", OtherKey="idHab")]
		public EntitySet<reserva> reservas
		{
			get
			{
				return this._reservas;
			}
			set
			{
				this._reservas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tip_hab_habitacion", Storage="_tip_hab", ThisKey="tipo", OtherKey="id", IsForeignKey=true)]
		public tip_hab tip_hab
		{
			get
			{
				return this._tip_hab.Entity;
			}
			set
			{
				tip_hab previousValue = this._tip_hab.Entity;
				if (((previousValue != value) 
							|| (this._tip_hab.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tip_hab.Entity = null;
						previousValue.habitacions.Remove(this);
					}
					this._tip_hab.Entity = value;
					if ((value != null))
					{
						value.habitacions.Add(this);
						this._tipo = value.id;
					}
					else
					{
						this._tipo = default(int);
					}
					this.SendPropertyChanged("tip_hab");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mantenciones(mantencione entity)
		{
			this.SendPropertyChanging();
			entity.habitacion = this;
		}
		
		private void detach_mantenciones(mantencione entity)
		{
			this.SendPropertyChanging();
			entity.habitacion = null;
		}
		
		private void attach_reservas(reserva entity)
		{
			this.SendPropertyChanging();
			entity.habitacion = this;
		}
		
		private void detach_reservas(reserva entity)
		{
			this.SendPropertyChanging();
			entity.habitacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mantenciones")]
	public partial class mantencione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idhab;
		
		private System.DateTime _fecha_ini;
		
		private System.DateTime _fecha_fin;
		
		private EntityRef<habitacion> _habitacion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidhabChanging(int value);
    partial void OnidhabChanged();
    partial void Onfecha_iniChanging(System.DateTime value);
    partial void Onfecha_iniChanged();
    partial void Onfecha_finChanging(System.DateTime value);
    partial void Onfecha_finChanged();
    #endregion
		
		public mantencione()
		{
			this._habitacion = default(EntityRef<habitacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idhab", DbType="Int NOT NULL")]
		public int idhab
		{
			get
			{
				return this._idhab;
			}
			set
			{
				if ((this._idhab != value))
				{
					if (this._habitacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidhabChanging(value);
					this.SendPropertyChanging();
					this._idhab = value;
					this.SendPropertyChanged("idhab");
					this.OnidhabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_ini", DbType="Date NOT NULL")]
		public System.DateTime fecha_ini
		{
			get
			{
				return this._fecha_ini;
			}
			set
			{
				if ((this._fecha_ini != value))
				{
					this.Onfecha_iniChanging(value);
					this.SendPropertyChanging();
					this._fecha_ini = value;
					this.SendPropertyChanged("fecha_ini");
					this.Onfecha_iniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_fin", DbType="Date NOT NULL")]
		public System.DateTime fecha_fin
		{
			get
			{
				return this._fecha_fin;
			}
			set
			{
				if ((this._fecha_fin != value))
				{
					this.Onfecha_finChanging(value);
					this.SendPropertyChanging();
					this._fecha_fin = value;
					this.SendPropertyChanged("fecha_fin");
					this.Onfecha_finChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="habitacion_mantencione", Storage="_habitacion", ThisKey="idhab", OtherKey="numero", IsForeignKey=true)]
		public habitacion habitacion
		{
			get
			{
				return this._habitacion.Entity;
			}
			set
			{
				habitacion previousValue = this._habitacion.Entity;
				if (((previousValue != value) 
							|| (this._habitacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._habitacion.Entity = null;
						previousValue.mantenciones.Remove(this);
					}
					this._habitacion.Entity = value;
					if ((value != null))
					{
						value.mantenciones.Add(this);
						this._idhab = value.numero;
					}
					else
					{
						this._idhab = default(int);
					}
					this.SendPropertyChanged("habitacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Memberships")]
	public partial class Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _Email;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowsStart;
		
		private string _Comment;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowsStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowsStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Membership()
		{
			this._Application = default(EntityRef<Application>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowsStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowsStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowsStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowsStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowsStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowsStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowsStart");
					this.OnFailedPasswordAnswerAttemptWindowsStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(256)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Membership", Storage="_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.Memberships.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Membership", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Membership = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pasajeros")]
	public partial class pasajero
	{
		
		private int _idreser;
		
		private int _idpersona;
		
		public pasajero()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idreser", DbType="Int NOT NULL")]
		public int idreser
		{
			get
			{
				return this._idreser;
			}
			set
			{
				if ((this._idreser != value))
				{
					this._idreser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idpersona", DbType="Int NOT NULL")]
		public int idpersona
		{
			get
			{
				return this._idpersona;
			}
			set
			{
				if ((this._idpersona != value))
				{
					this._idpersona = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.persona")]
	public partial class persona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _ci;
		
		private string _apellido;
		
		private System.DateTime _cumpleaños;
		
		private string _pasaporte;
		
		private EntityRef<cliente> _cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnciChanging(int value);
    partial void OnciChanged();
    partial void OnapellidoChanging(string value);
    partial void OnapellidoChanged();
    partial void OncumpleañosChanging(System.DateTime value);
    partial void OncumpleañosChanged();
    partial void OnpasaporteChanging(string value);
    partial void OnpasaporteChanged();
    #endregion
		
		public persona()
		{
			this._cliente = default(EntityRef<cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ci", DbType="Int NOT NULL")]
		public int ci
		{
			get
			{
				return this._ci;
			}
			set
			{
				if ((this._ci != value))
				{
					this.OnciChanging(value);
					this.SendPropertyChanging();
					this._ci = value;
					this.SendPropertyChanged("ci");
					this.OnciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this.OnapellidoChanging(value);
					this.SendPropertyChanging();
					this._apellido = value;
					this.SendPropertyChanged("apellido");
					this.OnapellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cumpleaños", DbType="Date NOT NULL")]
		public System.DateTime cumpleaños
		{
			get
			{
				return this._cumpleaños;
			}
			set
			{
				if ((this._cumpleaños != value))
				{
					this.OncumpleañosChanging(value);
					this.SendPropertyChanging();
					this._cumpleaños = value;
					this.SendPropertyChanged("cumpleaños");
					this.OncumpleañosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pasaporte", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string pasaporte
		{
			get
			{
				return this._pasaporte;
			}
			set
			{
				if ((this._pasaporte != value))
				{
					this.OnpasaporteChanging(value);
					this.SendPropertyChanging();
					this._pasaporte = value;
					this.SendPropertyChanged("pasaporte");
					this.OnpasaporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_persona", Storage="_cliente", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public cliente cliente
		{
			get
			{
				return this._cliente.Entity;
			}
			set
			{
				cliente previousValue = this._cliente.Entity;
				if (((previousValue != value) 
							|| (this._cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente.Entity = null;
						previousValue.persona = null;
					}
					this._cliente.Entity = value;
					if ((value != null))
					{
						value.persona = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profiles")]
	public partial class Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValueStrings;
		
		private System.Data.Linq.Binary _PropertyValueBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValueStringsChanging(string value);
    partial void OnPropertyValueStringsChanged();
    partial void OnPropertyValueBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValueBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public Profile()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValueStrings", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string PropertyValueStrings
		{
			get
			{
				return this._PropertyValueStrings;
			}
			set
			{
				if ((this._PropertyValueStrings != value))
				{
					this.OnPropertyValueStringsChanging(value);
					this.SendPropertyChanging();
					this._PropertyValueStrings = value;
					this.SendPropertyChanged("PropertyValueStrings");
					this.OnPropertyValueStringsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValueBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValueBinary
		{
			get
			{
				return this._PropertyValueBinary;
			}
			set
			{
				if ((this._PropertyValueBinary != value))
				{
					this.OnPropertyValueBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValueBinary = value;
					this.SendPropertyChanged("PropertyValueBinary");
					this.OnPropertyValueBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Profile", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Profile = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.reserva")]
	public partial class reserva : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _idusuario;
		
		private int _idcli;
		
		private int _idHab;
		
		private System.DateTime _fecha_ini;
		
		private System.DateTime _fecha_fin;
		
		private string _estado;
		
		private System.Nullable<double> _pago;
		
		private EntitySet<factura> _facturas;
		
		private EntityRef<habitacion> _habitacion;
		
		private EntityRef<User> _User;
		
		private EntityRef<cliente> _cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidusuarioChanging(System.Guid value);
    partial void OnidusuarioChanged();
    partial void OnidcliChanging(int value);
    partial void OnidcliChanged();
    partial void OnidHabChanging(int value);
    partial void OnidHabChanged();
    partial void Onfecha_iniChanging(System.DateTime value);
    partial void Onfecha_iniChanged();
    partial void Onfecha_finChanging(System.DateTime value);
    partial void Onfecha_finChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    partial void OnpagoChanging(System.Nullable<double> value);
    partial void OnpagoChanged();
    #endregion
		
		public reserva()
		{
			this._facturas = new EntitySet<factura>(new Action<factura>(this.attach_facturas), new Action<factura>(this.detach_facturas));
			this._habitacion = default(EntityRef<habitacion>);
			this._User = default(EntityRef<User>);
			this._cliente = default(EntityRef<cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idusuario", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid idusuario
		{
			get
			{
				return this._idusuario;
			}
			set
			{
				if ((this._idusuario != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidusuarioChanging(value);
					this.SendPropertyChanging();
					this._idusuario = value;
					this.SendPropertyChanged("idusuario");
					this.OnidusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcli", DbType="Int NOT NULL")]
		public int idcli
		{
			get
			{
				return this._idcli;
			}
			set
			{
				if ((this._idcli != value))
				{
					if (this._cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidcliChanging(value);
					this.SendPropertyChanging();
					this._idcli = value;
					this.SendPropertyChanged("idcli");
					this.OnidcliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idHab", DbType="Int NOT NULL")]
		public int idHab
		{
			get
			{
				return this._idHab;
			}
			set
			{
				if ((this._idHab != value))
				{
					if (this._habitacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidHabChanging(value);
					this.SendPropertyChanging();
					this._idHab = value;
					this.SendPropertyChanged("idHab");
					this.OnidHabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_ini", DbType="Date NOT NULL")]
		public System.DateTime fecha_ini
		{
			get
			{
				return this._fecha_ini;
			}
			set
			{
				if ((this._fecha_ini != value))
				{
					this.Onfecha_iniChanging(value);
					this.SendPropertyChanging();
					this._fecha_ini = value;
					this.SendPropertyChanged("fecha_ini");
					this.Onfecha_iniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_fin", DbType="Date NOT NULL")]
		public System.DateTime fecha_fin
		{
			get
			{
				return this._fecha_fin;
			}
			set
			{
				if ((this._fecha_fin != value))
				{
					this.Onfecha_finChanging(value);
					this.SendPropertyChanging();
					this._fecha_fin = value;
					this.SendPropertyChanged("fecha_fin");
					this.Onfecha_finChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pago", DbType="Float")]
		public System.Nullable<double> pago
		{
			get
			{
				return this._pago;
			}
			set
			{
				if ((this._pago != value))
				{
					this.OnpagoChanging(value);
					this.SendPropertyChanging();
					this._pago = value;
					this.SendPropertyChanged("pago");
					this.OnpagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="reserva_factura", Storage="_facturas", ThisKey="id", OtherKey="idreserva")]
		public EntitySet<factura> facturas
		{
			get
			{
				return this._facturas;
			}
			set
			{
				this._facturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="habitacion_reserva", Storage="_habitacion", ThisKey="idHab", OtherKey="numero", IsForeignKey=true)]
		public habitacion habitacion
		{
			get
			{
				return this._habitacion.Entity;
			}
			set
			{
				habitacion previousValue = this._habitacion.Entity;
				if (((previousValue != value) 
							|| (this._habitacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._habitacion.Entity = null;
						previousValue.reservas.Remove(this);
					}
					this._habitacion.Entity = value;
					if ((value != null))
					{
						value.reservas.Add(this);
						this._idHab = value.numero;
					}
					else
					{
						this._idHab = default(int);
					}
					this.SendPropertyChanged("habitacion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_reserva", Storage="_User", ThisKey="idusuario", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.reservas.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.reservas.Add(this);
						this._idusuario = value.UserId;
					}
					else
					{
						this._idusuario = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_reserva", Storage="_cliente", ThisKey="idcli", OtherKey="id", IsForeignKey=true)]
		public cliente cliente
		{
			get
			{
				return this._cliente.Entity;
			}
			set
			{
				cliente previousValue = this._cliente.Entity;
				if (((previousValue != value) 
							|| (this._cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente.Entity = null;
						previousValue.reservas.Remove(this);
					}
					this._cliente.Entity = value;
					if ((value != null))
					{
						value.reservas.Add(this);
						this._idcli = value.id;
					}
					else
					{
						this._idcli = default(int);
					}
					this.SendPropertyChanged("cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_facturas(factura entity)
		{
			this.SendPropertyChanging();
			entity.reserva = this;
		}
		
		private void detach_facturas(factura entity)
		{
			this.SendPropertyChanging();
			entity.reserva = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _Description;
		
		private EntitySet<UsersInRole> _UsersInRoles;
		
		private EntityRef<Application> _Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Role()
		{
			this._UsersInRoles = new EntitySet<UsersInRole>(new Action<UsersInRole>(this.attach_UsersInRoles), new Action<UsersInRole>(this.detach_UsersInRoles));
			this._Application = default(EntityRef<Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UsersInRole", Storage="_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<UsersInRole> UsersInRoles
		{
			get
			{
				return this._UsersInRoles;
			}
			set
			{
				this._UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Role", Storage="_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.Roles.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.servicio")]
	public partial class servicio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private int _categoria;
		
		private double _precio;
		
		private EntityRef<categoria_ser> _categoria_ser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OncategoriaChanging(int value);
    partial void OncategoriaChanged();
    partial void OnprecioChanging(double value);
    partial void OnprecioChanged();
    #endregion
		
		public servicio()
		{
			this._categoria_ser = default(EntityRef<categoria_ser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoria", DbType="Int NOT NULL")]
		public int categoria
		{
			get
			{
				return this._categoria;
			}
			set
			{
				if ((this._categoria != value))
				{
					if (this._categoria_ser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncategoriaChanging(value);
					this.SendPropertyChanging();
					this._categoria = value;
					this.SendPropertyChanged("categoria");
					this.OncategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precio", DbType="Float NOT NULL")]
		public double precio
		{
			get
			{
				return this._precio;
			}
			set
			{
				if ((this._precio != value))
				{
					this.OnprecioChanging(value);
					this.SendPropertyChanging();
					this._precio = value;
					this.SendPropertyChanged("precio");
					this.OnprecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="categoria_ser_servicio", Storage="_categoria_ser", ThisKey="categoria", OtherKey="id", IsForeignKey=true)]
		public categoria_ser categoria_ser
		{
			get
			{
				return this._categoria_ser.Entity;
			}
			set
			{
				categoria_ser previousValue = this._categoria_ser.Entity;
				if (((previousValue != value) 
							|| (this._categoria_ser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._categoria_ser.Entity = null;
						previousValue.servicios.Remove(this);
					}
					this._categoria_ser.Entity = value;
					if ((value != null))
					{
						value.servicios.Add(this);
						this._categoria = value.id;
					}
					else
					{
						this._categoria = default(int);
					}
					this.SendPropertyChanged("categoria_ser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.serviciousado")]
	public partial class serviciousado
	{
		
		private int _idreser;
		
		private int _idser;
		
		private int _cantidad;
		
		public serviciousado()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idreser", DbType="Int NOT NULL")]
		public int idreser
		{
			get
			{
				return this._idreser;
			}
			set
			{
				if ((this._idreser != value))
				{
					this._idreser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idser", DbType="Int NOT NULL")]
		public int idser
		{
			get
			{
				return this._idser;
			}
			set
			{
				if ((this._idser != value))
				{
					this._idser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cantidad", DbType="Int NOT NULL")]
		public int cantidad
		{
			get
			{
				return this._cantidad;
			}
			set
			{
				if ((this._cantidad != value))
				{
					this._cantidad = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tip_hab")]
	public partial class tip_hab : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tipo;
		
		private EntitySet<habitacion> _habitacions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    #endregion
		
		public tip_hab()
		{
			this._habitacions = new EntitySet<habitacion>(new Action<habitacion>(this.attach_habitacions), new Action<habitacion>(this.detach_habitacions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tip_hab_habitacion", Storage="_habitacions", ThisKey="id", OtherKey="tipo")]
		public EntitySet<habitacion> habitacions
		{
			get
			{
				return this._habitacions;
			}
			set
			{
				this._habitacions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_habitacions(habitacion entity)
		{
			this.SendPropertyChanging();
			entity.tip_hab = this;
		}
		
		private void detach_habitacions(habitacion entity)
		{
			this.SendPropertyChanging();
			entity.tip_hab = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<usuario> _usuario;
		
		private EntityRef<Membership> _Membership;
		
		private EntityRef<Profile> _Profile;
		
		private EntitySet<reserva> _reservas;
		
		private EntitySet<UsersInRole> _UsersInRoles;
		
		private EntityRef<Application> _Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public User()
		{
			this._usuario = default(EntityRef<usuario>);
			this._Membership = default(EntityRef<Membership>);
			this._Profile = default(EntityRef<Profile>);
			this._reservas = new EntitySet<reserva>(new Action<reserva>(this.attach_reservas), new Action<reserva>(this.detach_reservas));
			this._UsersInRoles = new EntitySet<UsersInRole>(new Action<UsersInRole>(this.attach_UsersInRoles), new Action<UsersInRole>(this.detach_UsersInRoles));
			this._Application = default(EntityRef<Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_usuario", Storage="_usuario", ThisKey="UserId", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public usuario usuario
		{
			get
			{
				return this._usuario.Entity;
			}
			set
			{
				usuario previousValue = this._usuario.Entity;
				if (((previousValue != value) 
							|| (this._usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuario.Entity = null;
						previousValue.User = null;
					}
					this._usuario.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("usuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Membership", Storage="_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public Membership Membership
		{
			get
			{
				return this._Membership.Entity;
			}
			set
			{
				Membership previousValue = this._Membership.Entity;
				if (((previousValue != value) 
							|| (this._Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Membership.Entity = null;
						previousValue.User = null;
					}
					this._Membership.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Profile", Storage="_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.User = null;
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_reserva", Storage="_reservas", ThisKey="UserId", OtherKey="idusuario")]
		public EntitySet<reserva> reservas
		{
			get
			{
				return this._reservas;
			}
			set
			{
				this._reservas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersInRole", Storage="_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UsersInRole> UsersInRoles
		{
			get
			{
				return this._UsersInRoles;
			}
			set
			{
				this._UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_User", Storage="_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_reservas(reserva entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_reservas(reserva entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersInRoles")]
	public partial class UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public UsersInRole()
		{
			this._Role = default(EntityRef<Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UsersInRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UsersInRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersInRole", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UsersInRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.archivo")]
	public partial class archivo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ruta_fisica;
		
		private System.DateTime _fecha;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onruta_fisicaChanging(string value);
    partial void Onruta_fisicaChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    #endregion
		
		public archivo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ruta_fisica", DbType="VarChar(256)")]
		public string ruta_fisica
		{
			get
			{
				return this._ruta_fisica;
			}
			set
			{
				if ((this._ruta_fisica != value))
				{
					this.Onruta_fisicaChanging(value);
					this.SendPropertyChanging();
					this._ruta_fisica = value;
					this.SendPropertyChanged("ruta_fisica");
					this.Onruta_fisicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="Date NOT NULL")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cliente")]
	public partial class cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private string _ciudad;
		
		private string _estado;
		
		private string _pais;
		
		private string _nit;
		
		private string _telefono;
		
		private string _direccion;
		
		private string _email;
		
		private string _comentarios;
		
		private EntityRef<agencia> _agencia;
		
		private EntityRef<empresa> _empresa;
		
		private EntityRef<persona> _persona;
		
		private EntitySet<reserva> _reservas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnciudadChanging(string value);
    partial void OnciudadChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    partial void OnpaisChanging(string value);
    partial void OnpaisChanged();
    partial void OnnitChanging(string value);
    partial void OnnitChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OncomentariosChanging(string value);
    partial void OncomentariosChanged();
    #endregion
		
		public cliente()
		{
			this._agencia = default(EntityRef<agencia>);
			this._empresa = default(EntityRef<empresa>);
			this._persona = default(EntityRef<persona>);
			this._reservas = new EntitySet<reserva>(new Action<reserva>(this.attach_reservas), new Action<reserva>(this.detach_reservas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ciudad", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ciudad
		{
			get
			{
				return this._ciudad;
			}
			set
			{
				if ((this._ciudad != value))
				{
					this.OnciudadChanging(value);
					this.SendPropertyChanging();
					this._ciudad = value;
					this.SendPropertyChanged("ciudad");
					this.OnciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pais", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string pais
		{
			get
			{
				return this._pais;
			}
			set
			{
				if ((this._pais != value))
				{
					this.OnpaisChanging(value);
					this.SendPropertyChanging();
					this._pais = value;
					this.SendPropertyChanged("pais");
					this.OnpaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nit", DbType="VarChar(30)")]
		public string nit
		{
			get
			{
				return this._nit;
			}
			set
			{
				if ((this._nit != value))
				{
					this.OnnitChanging(value);
					this.SendPropertyChanging();
					this._nit = value;
					this.SendPropertyChanged("nit");
					this.OnnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comentarios", DbType="VarChar(500)")]
		public string comentarios
		{
			get
			{
				return this._comentarios;
			}
			set
			{
				if ((this._comentarios != value))
				{
					this.OncomentariosChanging(value);
					this.SendPropertyChanging();
					this._comentarios = value;
					this.SendPropertyChanged("comentarios");
					this.OncomentariosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_agencia", Storage="_agencia", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public agencia agencia
		{
			get
			{
				return this._agencia.Entity;
			}
			set
			{
				agencia previousValue = this._agencia.Entity;
				if (((previousValue != value) 
							|| (this._agencia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._agencia.Entity = null;
						previousValue.cliente = null;
					}
					this._agencia.Entity = value;
					if ((value != null))
					{
						value.cliente = this;
					}
					this.SendPropertyChanged("agencia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_empresa", Storage="_empresa", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public empresa empresa
		{
			get
			{
				return this._empresa.Entity;
			}
			set
			{
				empresa previousValue = this._empresa.Entity;
				if (((previousValue != value) 
							|| (this._empresa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._empresa.Entity = null;
						previousValue.cliente = null;
					}
					this._empresa.Entity = value;
					if ((value != null))
					{
						value.cliente = this;
					}
					this.SendPropertyChanged("empresa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_persona", Storage="_persona", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public persona persona
		{
			get
			{
				return this._persona.Entity;
			}
			set
			{
				persona previousValue = this._persona.Entity;
				if (((previousValue != value) 
							|| (this._persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._persona.Entity = null;
						previousValue.cliente = null;
					}
					this._persona.Entity = value;
					if ((value != null))
					{
						value.cliente = this;
					}
					this.SendPropertyChanged("persona");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_reserva", Storage="_reservas", ThisKey="id", OtherKey="idcli")]
		public EntitySet<reserva> reservas
		{
			get
			{
				return this._reservas;
			}
			set
			{
				this._reservas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_reservas(reserva entity)
		{
			this.SendPropertyChanging();
			entity.cliente = this;
		}
		
		private void detach_reservas(reserva entity)
		{
			this.SendPropertyChanging();
			entity.cliente = null;
		}
	}
}
#pragma warning restore 1591
